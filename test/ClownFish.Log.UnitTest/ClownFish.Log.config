<?xml version="1.0" encoding="utf-8"?>
<LogConfig xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--是否启用日志写入功能，总开关-->
  <Enable>true</Enable>
  <!--异步写入的间隔时间，单位：毫秒-->
  <TimerPeriod>100</TimerPeriod>
  <!--性能日志的阀值参数，超过这个阀值将会记录到性能日志中，单位：毫秒-->
  <Performance DbExecuteTimeout="500" HttpExecuteTimeout="1000" />
  <!--日志写入过程如果发生异常，将最后的异常写入哪个写入器对应的持久方式-->
  <ExceptionWriter>WinLog</ExceptionWriter>
  <!--是否需要在性能日志和异常日志中记录一些环境信息-->
  <LogEnvironmentInfo>false</LogEnvironmentInfo>

  <Writers>
    <!--定义一个文件写入器，它将会把日志做 XML 序列化后写入 由RootDirectory参数指定的目录 -->
    <Writer Name="File" Type="ClownFish.Log.Serializer.FileWriter, ClownFish.Log">
      <Option Key="RootDirectory" Value="Log" />
    </Writer>
    
    <!--定义一个文件写入器，它将会把日志做 JSON 序列化后写入 由RootDirectory参数指定的目录 -->
    <Writer Name="Json" Type="ClownFish.Log.Serializer.JsonWriter, ClownFish.Log">
      <Option Key="RootDirectory" Value="JsonLog" />
    </Writer>
    
    <!--定义一个邮件写入器，它将会把日志做 XML 序列化后发送邮件，收件人由Receivers参数指定 -->
    <Writer Name="Mail" Type="ClownFish.Log.Serializer.MailWriter, ClownFish.Log">
      <!--如果要测试邮件功能，请先修改 App.config 配置邮件发送帐号-->
      <Option Key="Receivers" Value="aaaaaa@mysoft.com.cn" />
    </Writer>
    
    <!--定义一个MongoDb写入器，它将会把日志写入MongoDb中 -->
    <Writer Name="MongoDb" Type="ClownFish.Log.Serializer.MongoDbWriter, ClownFish.Log">
      <Option Key="ConnectionString" Value="mongodb://10.5.106.100/Test?connectTimeout=5s;socketTimeout=5s" />
    </Writer>
    
    <!--定义一个MSMQ写入器，它将会把日志写入MSMQ中 -->
    <Writer Name="Msmq" Type="ClownFish.Log.Serializer.MsmqWriter, ClownFish.Log">
      <Option Key="RootPath" Value=".\private$\ClownFish-Log-test" />
    </Writer>
    
    <!--定义一个WinLog写入器，它将会把日志写入Windows日志中 -->
    <Writer Name="WinLog" Type="ClownFish.Log.Serializer.WinLogWriter, ClownFish.Log">
      <Option Key="LogName" Value="ClownFish-LogTest" />
      <Option Key="SourceName" Value="ClownFish" />
    </Writer>

    <!--### 注意：以下写入器，在初始化时，会为不同的数据类型创建不同的目录或者集合，并不是杂乱的放在一起。-->

    <!--定义一个Http写入器，它将会把日志发送到远程服务器上 -->
    <Writer Name="Http" Type="ClownFish.Log.Serializer.HttpWriter, ClownFish.Log">
      <!--服务端接收网址-->
      <Option Key="url" Value="http://www.fish-test.com:50003/log-http.aspx" />
      <!--消息对象的序列化格式，可参考ClownFish.Base.Http.SerializeFormat枚举中的定义范围，建议选择：Json or Xml-->
      <Option Key="format" Value="Xml" />
      <!--指标消息类型的 x-datatype 参数是否放在请求头中，0指示放在URL中，默认值：1 -->
      <Option Key="datatype-in-header" Value="1" />

      <!--发送请求失败的重试次数，0表示不需要重试-->
      <Option Key="retry-count" Value="2" />
      <!--发送请求失败的重试时间间隔，单位：毫秒-->
      <Option Key="retry-wait-millisecond" Value="100" />

      <!--随HTTP请求附加的查询字符串参数，参数名：appid，参数值：testapp-->
      <Option Key="querystring:appid" Value="testapp" />
      <!--随HTTP请求附加的查询字符串参数，参数名：customerid，参数值：11111111-->
      <Option Key="querystring:customerid" Value="11111111" />
      <!--随HTTP请求附加的请求头参数，请求头名称：x-test，参数值：222222222-->
      <Option Key="header:x-test" Value="222222222" />
    </Writer>
  </Writers>
  
  <Types>
    <!--定义支持的数据类型，并为每种数据类型配置使用哪种写入器，
      如果某个数据类型同时指定了多个写入器，将会以不同的持久化方式同时记录多次-->
    
    <Type DataType="ClownFish.Log.Model.ExceptionInfo, ClownFish.Log" Writers="File,Json,Http,WinLog" />
    <Type DataType="ClownFish.Log.Model.PerformanceInfo, ClownFish.Log" Writers="File,Json" />
    <Type DataType="ClownFish.Log.Model.HttpRequestData, ClownFish.Log" Writers="File" />
    <Type DataType="ClownFish.Log.Model.WarningInfo, ClownFish.Log" Writers="File" />

    <!--### 注意：数据类型使用哪种写入器，必须定义，否则ClownFish.Log不知道该如何记录它们！-->
  </Types>
</LogConfig>